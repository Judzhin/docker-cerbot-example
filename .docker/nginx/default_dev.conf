upstream upstream-default {
    server php-fpm:9000;
}

## cerbot web root
server {
    listen 80;
    listen [::]:80;
    server_name erc-distribution.ge www.erc-distribution.ge;
    server_name backend.erc-distribution.ge www.backend.erc-distribution.ge;
    server_tokens off;

    location ~ /.well-known/acme-challenge {
        allow all;
        root /var/www/certbot;
    }

    location / {
        rewrite ^ https://$host$request_uri? permanent;
    }
}

## erc-distribution.ge
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name www.erc-distribution.ge;
    return 301 https://erc-distribution.ge$request_uri;

    server_tokens off;

    #if your version of nginx is < 1.11.11, uncomment these next two lines
    #as $https will not be defined.
    #if ($server_port = 443) { set $https on; }
    #if ($server_port = 80) { set $https off; }

    ssl_certificate /etc/letsencrypt/live/erc-distribution.ge/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/erc-distribution.ge/privkey.pem;
    # ssl_certificate и ssl_certificate_key - необходимые сертификаты

    ssl_buffer_size 8k;

    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
}

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name erc-distribution.ge;
    server_tokens off;
    root /var/www/html/public/example;

    #if your version of nginx is < 1.11.11, uncomment these next two lines
    #as $https will not be defined.
    #if ($server_port = 443) { set $https on; }
    #if ($server_port = 80) { set $https off; }

    ssl_certificate /etc/letsencrypt/live/erc-distribution.ge/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/erc-distribution.ge/privkey.pem;
    # ssl_certificate и ssl_certificate_key - необходимые сертификаты

    ssl_buffer_size 8k;

    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
    # include и ssl_dhparam - дополнительные, рекомендуемые Let's Encrypt, параметры

    location / {
         # try to serve file directly, fallback to app.php
         # try_files $uri /app.php$is_args$args;
        try_files $uri /index.php$is_args$args;
    }

    location ~ ^/index\.php(/|$) {
        fastcgi_pass upstream-default;
        fastcgi_split_path_info ^(.+\.php)(/.*)$;
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
        fastcgi_param DOCUMENT_ROOT $realpath_root;
        fastcgi_param PATH_INFO $fastcgi_path_info;
        fastcgi_param HTTPS $https;
        internal;
   }

    # return 404 for all other php files not matching the front controller
    # this prevents access to other php files you don't want to be accessible.
    location ~ \.php$ {
        return 404;
    }

    location ~ /\.ht {
        deny all;
    }

    access_log /var/log/nginx/erc-distribution.ge.access.log;
    error_log /var/log/nginx/erc-distribution.ge.error.log info;
}

## backend.erc-distribution.ge
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name backend.erc-distribution.ge www.backend.erc-distribution.ge;
    server_tokens off;
    root /var/www/html/public/subdomain.example;

    #if your version of nginx is < 1.11.11, uncomment these next two lines
    #as $https will not be defined.
    #if ($server_port = 443) { set $https on; }
    #if ($server_port = 80) { set $https off; }

    ssl_certificate /etc/letsencrypt/live/erc-distribution.ge/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/erc-distribution.ge/privkey.pem;
    # ssl_certificate и ssl_certificate_key - необходимые сертификаты

    ssl_buffer_size 8k;

    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
    # include и ssl_dhparam - дополнительные, рекомендуемые Let's Encrypt, параметры

    location / {
         # try to serve file directly, fallback to app.php
         # try_files $uri /app.php$is_args$args;
        try_files $uri /index.php$is_args$args;
    }

    location ~ ^/index\.php(/|$) {
        fastcgi_pass upstream-default;
        fastcgi_split_path_info ^(.+\.php)(/.*)$;
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
        fastcgi_param DOCUMENT_ROOT $realpath_root;
        fastcgi_param PATH_INFO $fastcgi_path_info;
        fastcgi_param HTTPS $https;
        internal;
   }

    # return 404 for all other php files not matching the front controller
    # this prevents access to other php files you don't want to be accessible.
    location ~ \.php$ {
        return 404;
    }

    location ~ /\.ht {
        deny all;
    }

    access_log /var/log/nginx/backend.erc-distribution.ge.access.log;
    error_log /var/log/nginx/backend.erc-distribution.ge.error.log info;
}